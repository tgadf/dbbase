from dbbase import MusicDBIDfrom dbbase import MusicDBIDBasefrom dbbase import MusicDBIDModValfrom dbbase import getModValsfrom dbmaster import MasterDBsdef test_getmodvals():    mv = MusicDBIDModVal()    modVals = getModVals()    assert isinstance(modVals, list), f"modvals [{modVals}] is not a list"    assert len(modVals) == mv.maxModVal, f"len(modvals) [{len(modVals)}] is not [{mv.maxModVal}]"    modVals = getModVals(1)    assert isinstance(modVals, list), f"modvals [{modVals}] is not a list"    assert len(modVals) == 1, f"len(modvals) [{len(modVals)}] is not 1"    modVals = getModVals([1])    assert isinstance(modVals, list), f"modvals [{modVals}] is not a list"    assert len(modVals) == 1, f"len(modvals) [{len(modVals)}] is not 1"    modVals = getModVals(range(10))    assert isinstance(modVals, list), f"modvals [{modVals}] is not a list"    assert len(modVals) == 10, f"len(modvals) [{len(modVals)}] is not 10"def test_dbidmodval():    mdbs = MasterDBs()    dbs = mdbs.getDBs()    mdbid = MusicDBID(dbs[0])    mdbidbase = MusicDBIDBase()        mv = MusicDBIDModVal()        dbid = None    modVal = mv.getModVal(dbid)    assert modVal is None, f"modVal [{modVal}] from dbid [{dbid}] is not None"    globVal = mv.getGlobVal(dbid)    assert globVal is None, f"globVal [{globVal}] from dbid [{dbid}] is not None"        dbid = 'hello'    modVal = mv.getModVal(dbid)    assert modVal == 94, f"modVal [{modVal}] from dbid [{dbid}] is not 94"    globVal = mv.getGlobVal(dbid)    assert globVal == 29, f"globVal [{globVal}] from dbid [{dbid}] is not 29"        dbid = '1234'    modVal = mv.getModVal(dbid)    assert modVal == 34, f"modVal [{modVal}] from dbid [{dbid}] is not 34"    globVal = mv.getGlobVal(dbid)    assert globVal == 12, f"globVal [{globVal}] from dbid [{dbid}] is not 12"        dbid = '799'    modVal = mv.getModVal(dbid)    assert modVal == 99, f"modVal [{modVal}] from dbid [{dbid}] is not 99"    globVal = mv.getGlobVal(dbid)    assert globVal == 7, f"globVal [{globVal}] from dbid [{dbid}] is not 7"    modGlobVal = mv.getModGlobVal(globVal)    assert modGlobVal == '07', f"modGlobVal [{modGlobVal}] from dbid [{dbid}] is not 07"        dbid = '5'    modVal = mv.getModVal(dbid)    assert modVal == 5, f"modVal [{modVal}] from dbid [{dbid}] is not 5"    globVal = mv.getGlobVal(dbid)    assert globVal == 0, f"globVal [{globVal}] from dbid [{dbid}] is not 0"    modGlobVal = mv.getModGlobVal(modVal)    assert modGlobVal == '05', f"modGlobVal [{modGlobVal}] from dbid [{dbid}] is not 05"    modGlobVal = mv.getModGlobVal(globVal)    assert modGlobVal == '00', f"modGlobVal [{modGlobVal}] from dbid [{dbid}] is not 00"